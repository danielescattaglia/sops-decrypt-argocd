apiVersion: apps/v1
kind: Deployment
metadata:
  name: sops-decrypt-plugin
  namespace: argocd-plugins
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sops-decrypt-plugin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sops-decrypt-plugin
    spec:
      initContainers:
        - name: import-gpg-key
          command:
            - gpg
            - --import
            - /sops-gpg/sops.asc
          env:
            - name: GNUPGHOME
              value: /gnupg-home/.gnupg
          image: quay.io/argoproj/argocd:v2.12.3
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /sops-gpg
              name: sops-gpg
            - mountPath: /gnupg-home
              name: gnupg-home
      containers:
        - name: main
          image: golang:latest
          command: ["/bin/bash"]
          args: ["-c", "cd /app && go run ."]
          env:
            - name: GNUPGHOME
              value: /gnupg-home/.gnupg
          ports:
            - containerPort: 4355
              name: http
          volumeMounts:
            - mountPath: /var/run/argo/token
              name: token
              subPath: token
            - mountPath: /var/run/argo/pgp-key
              name: sops-gpg
              subPath: sops.asc
            - name: sops-decrypt-script
              mountPath: /app
            - name: gnupg-home
              mountPath: /gnupg-home
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4355
          readinessProbe:
            httpGet:
              path: /healthz
              port: 4355
      volumes:
        - name: token
          secret:
            secretName: sops-decrypt-token
        - name: sops-gpg
          secret:
            defaultMode: 420
            secretName: sops-gpg
        - name: sops-decrypt-script
          configMap:
            name: sops-decrypt-script
        - emptyDir: {}
          name: gnupg-home